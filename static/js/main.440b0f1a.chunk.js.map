{"version":3,"sources":["logo.svg","images/logoteste.png","Menu.js","Button.js","PhotoSlider.js","AboutUs.js","ContactUs.js","Homepage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Menu","className","id","src","require","href","React","Component","Button","onClick","this","props","onClickAction","buttonText","PhotoSlider","buttonAction","alert","AboutUs","ContactUs","Homepage","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8JAAAA,EAAOC,QAAU,IAA0B,kC,oDCA3CD,EAAOC,QAAU,IAA0B,uC,kKCsB5BC,G,uLAjBP,OACI,yBAAKC,UAAU,QACX,yBAAKC,GAAG,QAEJ,yBAAKC,IAAKC,EAAQ,OAGtB,yBAAKF,GAAG,eACJ,uBAAGG,KAAK,KAAR,IAAa,6CACb,uBAAGA,KAAK,KAAR,IAAa,8CACb,uBAAGA,KAAK,KAAR,IAAa,qD,GAZdC,IAAMC,YCUVC,G,uLARP,OACI,uBAAGP,UAAU,kBAAkBQ,QAASC,KAAKC,MAAMC,eAC9CF,KAAKC,MAAME,gB,GAJPP,IAAMC,YCuBZO,G,iNApBXC,aAAe,WACXC,MAAM,0B,wEAGA,IAAD,OACL,OACI,yBAAKf,UAAU,sBACX,yBAAKA,UAAU,sBACX,wBAAIA,UAAU,YAAd,4BACA,wBAAIA,UAAU,YAAd,6FAGJ,yBAAKA,UAAU,cACX,kBAAC,EAAD,CAAQY,WAAY,aAAcD,cAAe,kBAAK,EAAKG,wB,GAfrDT,IAAMC,YCgBjBU,E,iLAhBP,OACI,m+E,GAHUX,IAAMC,WCQbW,E,iLANP,OACI,4C,GAHYZ,IAAMC,WCoBfY,E,iLAbP,OACI,yBAAKjB,GAAG,YACJ,yBAAKD,UAAU,gBACX,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEJ,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GATOK,IAAMC,WCIda,MANf,WACE,OACE,kBAAC,EAAD,OCKgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.440b0f1a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/logoteste.2b46d42c.png\";","import React from 'react';\nimport './menu.css'\n\nclass Menu extends React.Component {\n    render() {\n        return (\n            <div className='menu'>\n                <div id='logo'>\n                \n                    <img src={require('./images/logoteste.png')}></img>\n\n                </div>\n                <div id='menuOptions'>\n                    <a href=\"#\"> <span> About Us </span></a>\n                    <a href=\"#\"> <span> Portfolio </span></a>\n                    <a href=\"#\"> <span> Contact Us </span></a>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Menu;","import React from 'react';\nimport './button.css'\n\nclass Button extends React.Component {\n    render() {\n        return (\n            <a className=\"centered button\" onClick={this.props.onClickAction}>\n                {this.props.buttonText}\n            </a>\n        );\n    }\n}\n\nexport default Button;","import React from 'react';\nimport Button from './Button'\nimport './photoslider.css'\n\nclass PhotoSlider extends React.Component {\n\n    buttonAction = function() {\n        alert(\"Testing button action\")\n    }\n\n    render() {\n        return (\n            <div className=\"centered photo-div\">\n                <div className=\"centered title-div\">\n                    <h1 className=\"subtitle\">An impactful phrase here</h1>\n                    <h3 className=\"subtitle\">Uma empresa pequenina e aqui estou s√≥ a escrever mais coisas para ver se faz overflow</h3>\n                    \n                </div>\n                <div className=\"button-div\">\n                    <Button buttonText={'Saber Mais'} onClickAction={()=> this.buttonAction()}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PhotoSlider;","import React from 'react';\n\nclass AboutUs extends React.Component {\n    render() {\n        return (\n            <div >\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas elementum mi nunc, id aliquet tellus aliquet ac. Ut ut odio lacinia, pharetra lacus eget, vulputate leo. Nulla mollis tellus a eleifend eleifend. Donec vel molestie velit, sed convallis velit. Proin varius commodo erat, sit amet auctor ante venenatis in. Suspendisse in ex ipsum. Maecenas at molestie nibh. Aenean non pretium ligula. Aenean bibendum leo ut ex maximus, auctor imperdiet lorem viverra. Praesent commodo facilisis quam sit amet dignissim. Praesent ut sapien vel turpis consequat vestibulum ornare nec felis.\n            \n            Proin tortor ipsum, maximus vel dui sed, vestibulum tincidunt mi. Fusce libero mi, fringilla ultrices libero vel, rutrum finibus justo. Vestibulum maximus, ante et consectetur porta, neque ligula consequat odio, ac tempus lorem lorem consectetur urna. Etiam dapibus turpis eu risus vulputate vulputate. Pellentesque sed lobortis urna. Aliquam facilisis urna aliquet erat tristique finibus. Integer a ipsum vitae augue laoreet viverra.\n            \n            Nunc dictum velit eu nulla ultricies, id dignissim nisl imperdiet. Nulla ut mattis odio. Suspendisse finibus nisi sapien, non dignissim leo pharetra at. Interdum et malesuada fames ac ante ipsum primis in faucibus. Suspendisse sed orci pretium, sollicitudin lectus sit amet, gravida lorem. In eu felis commodo elit posuere viverra condimentum nec nisi. Curabitur ullamcorper condimentum tincidunt. Curabitur hendrerit venenatis ipsum.\n            \n            Donec dictum diam sit amet tortor faucibus condimentum. Curabitur sed ex blandit, gravida purus eget, vestibulum ipsum. Vestibulum nec nulla eu libero sagittis fermentum. Vestibulum tristique luctus dignissim. Phasellus cursus mauris leo. Sed egestas eget massa at porta. Sed non nunc vestibulum, molestie ex et, eleifend elit. Cras eu ante odio. Curabitur non dolor leo. Maecenas consectetur tempus arcu sed semper. Nam egestas turpis eu felis faucibus convallis. Nam ultricies convallis magna quis lacinia. Vestibulum in varius dolor. Pellentesque cursus luctus elit, at consequat tellus maximus sit amet.\n            \n            Vestibulum ullamcorper, libero at placerat porta, risus tortor feugiat ligula, tincidunt efficitur est arcu a purus. Praesent faucibus malesuada lacus, at aliquet diam tempus eget. Aenean metus elit, accumsan rhoncus blandit sed, mattis et quam. Morbi at faucibus sapien. Nam sit amet nisl ut lectus efficitur finibus. Etiam malesuada quam id facilisis finibus. Cras sapien urna, ultricies rutrum ex sed, posuere elementum orci.\n            </div>\n        );\n    }\n}\n\nexport default AboutUs;","import React from 'react';\n\nclass ContactUs extends React.Component {\n    render() {\n        return (\n            <p>ContactUs</p>\n        );\n    }\n}\n\nexport default ContactUs;","import React from 'react';\nimport Menu from './Menu'\nimport PhotoSlider from './PhotoSlider'\nimport AboutUs from './AboutUs'\nimport ContactUs from './ContactUs'\nimport './index.css'\n\nclass Homepage extends React.Component {\n    render() {\n        return (\n            <div id='homepage'>\n                <div className=\"init-section\">\n                    <Menu />\n                    <PhotoSlider />\n                </div>\n                <AboutUs />\n                <ContactUs />\n            </div>\n        );\n    }\n}\n\nexport default Homepage;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Homepage from './Homepage.js'\n\nfunction App() {\n  return (\n    <Homepage />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}