{"version":3,"sources":["logo.svg","images/logoteste.png","Menu.js","Button.js","PhotoSlider.js","AboutUs.js","Portfolio.js","ContactUs.js","Homepage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Menu","className","id","src","require","href","React","Component","Button","onClick","this","props","onClickAction","buttonText","PhotoSlider","buttonAction","alert","AboutUs","Portfolio","ContactUs","Homepage","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8JAAAA,EAAOC,QAAU,IAA0B,kC,oDCA3CD,EAAOC,QAAU,IAA0B,uC,wNCsB5BC,G,uLAjBP,OACI,yBAAKC,UAAU,QACX,yBAAKC,GAAG,QAEJ,yBAAKC,IAAKC,EAAQ,OAGtB,yBAAKF,GAAG,eACJ,uBAAGG,KAAK,sBAAR,cACA,uBAAGA,KAAK,KAAR,eACA,uBAAGA,KAAK,wBAAR,sB,GAZDC,IAAMC,YCUVC,G,uLARP,OACI,uBAAGP,UAAU,kBAAkBQ,QAASC,KAAKC,MAAMC,eAC9CF,KAAKC,MAAME,gB,GAJPP,IAAMC,YCuBZO,G,iNApBXC,aAAe,WACXC,MAAM,0B,wEAGA,IAAD,OACL,OACI,yBAAKf,UAAU,sBACX,yBAAKA,UAAU,sBACX,wBAAIA,UAAU,SAAd,yDACA,wBAAIA,UAAU,YAAd,+DAGJ,yBAAKA,UAAU,cACX,kBAAC,EAAD,CAAQY,WAAY,aAAcD,cAAe,kBAAK,EAAKG,wB,GAfrDT,IAAMC,YCkBjBU,G,uLAjBP,OACI,yBAAKf,GAAG,qBACJ,0BAAMA,GAAG,gBACD,4aAIJ,2jB,GATEI,IAAMC,YCUbW,G,uLARP,OACI,yBAAKhB,GAAG,uBAAR,iB,GAHYI,IAAMC,YCUfY,G,uLARP,OACI,yBAAKjB,GAAG,uBAAR,iB,GAHYI,IAAMC,YCqBfa,E,iLAdP,OACI,yBAAKlB,GAAG,YACJ,yBAAKD,UAAU,gBACX,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEJ,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GAVOK,IAAMC,WCGdc,MANf,WACE,OACE,kBAAC,EAAD,OCKgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.51990fdf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/logoteste.2b46d42c.png\";","import React from 'react';\nimport './menu.css'\n\nclass Menu extends React.Component {\n    render() {\n        return (\n            <div className='menu'>\n                <div id='logo'>\n\n                    <img src={require('./images/logoteste.png')}></img>\n\n                </div>\n                <div id='menuOptions'>\n                    <a href=\"#aboutus_container\"> About Us </a>\n                    <a href=\"#\"> Portfolio </a>\n                    <a href=\"#contactus_container\"> Contact Us </a>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Menu;","import React from 'react';\nimport './button.css'\n\nclass Button extends React.Component {\n    render() {\n        return (\n            <a className=\"centered button\" onClick={this.props.onClickAction}>\n                {this.props.buttonText}\n            </a>\n        );\n    }\n}\n\nexport default Button;","import React from 'react';\nimport Button from './Button'\nimport './photoslider.css'\n\nclass PhotoSlider extends React.Component {\n\n    buttonAction = function() {\n        alert(\"Testing button action\")\n    }\n\n    render() {\n        return (\n            <div className=\"centered photo-div\">\n                <div className=\"centered title-div\">\n                    <h1 className=\"title\">Cardoso &amp; Palma - Engenharia e Construção, Lda.</h1>\n                    <h3 className=\"subtitle\">Produzir com qualidade significa produzir com segurança</h3>\n                    \n                </div>\n                <div className=\"button-div\">\n                    <Button buttonText={'Saber Mais'} onClickAction={()=> this.buttonAction()}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PhotoSlider;","import React from 'react';\nimport './aboutus.css'\n\nclass AboutUs extends React.Component {\n    render() {\n        return (\n            <div id=\"aboutus_container\">\n                <span id=\"aboutus_text\">\n                        <p>A Cardoso &amp; Palma - Engenharia e Construção, Lda., teve o seu início em Janeiro de 2020 como sociedade,\n                    embora os seus sócios já tenham conhecimentos e projectos elaborados nas áreas de engenharia, arquitetura e construção,\n                    como freelancers desde 1997 e que ao longo dos anos aplicamos as mais altas tecnologias, em sintonia com as melhores técnicas de construção.</p>\n                    \n                    <p>Ao longo dos anos foram desenvolvidos projetos de arquitetura, engenharia e construções que permitiram obter um levado conhecimento\n                    e oferecer aos seus clientes as melhores soluções tecnicas, adequadas a cada projeto ou contrução, com o objectivo de garantir uma \n                    qualidade final de excelência. A actividade principal da nossa empresa é a engenharia e construção. Somos um empresa que se caracteriza,\n                    através do rigor e aumento do nível de qualidade e dos detalhes mais cuidados na construção.</p>\n                </span>\n            </div>\n        );\n    }\n}\n\nexport default AboutUs;","import React from 'react';\nimport './portfolio.css'\n\nclass Portfolio extends React.Component {\n    render() {\n        return (\n            <div id=\"portfolio_container\">\n               Portfolio \n            </div>  \n        );\n    }\n}\n\nexport default Portfolio;","import React from 'react';\nimport './contactus.css'\n\nclass ContactUs extends React.Component {\n    render() {\n        return (\n            <div id=\"contactus_container\">\n               ContactUs \n            </div>  \n        );\n    }\n}\n\nexport default ContactUs;","import React from 'react';\nimport Menu from './Menu'\nimport PhotoSlider from './PhotoSlider'\nimport AboutUs from './AboutUs'\nimport Portfolio from './Portfolio'\nimport ContactUs from './ContactUs'\nimport './index.css'\n\nclass Homepage extends React.Component {\n    render() {\n        return (\n            <div id='homepage'>\n                <div className=\"init-section\">\n                    <Menu />\n                    <PhotoSlider />\n                </div>\n                <AboutUs />\n                <Portfolio />\n                <ContactUs />\n            </div>\n        );\n    }\n}\n\nexport default Homepage;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Homepage from './Homepage.js'\n\nfunction App() {\n  return (\n    <Homepage />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}